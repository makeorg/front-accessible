{
	"name": "make.org",
	"version": "1.1.0",
	"contributors": [
		{
			"name": "Amine Zaghdoudi",
			"email": "az@make.org"
		},
		{
			"name": "Olivier Donze",
			"email": "od@make.org"
		},
		{
			"name": "AurÃ©lie Tudare",
			"email": "aurelie.tudare@make.org"
		}
	],
	"main": "index.js",
	"license": "GPL-3.0-or-later",
	"engines": {
		"node": ">=12.18 <=12.20",
		"yarn": "~1.22"
	},
	"dependencies": {
		"@loadable/component": "~5.14.1",
		"@loadable/server": "~5.14.0",
		"adblockdetect": "^0.0.2",
		"athena-design-tokens": "^0.1.6-beta.place.1",
		"axios": "~0.21.0",
		"axios-retry": "~3.1.9",
		"body-parser": "~1.19.0",
		"compression": "~1.7.3",
		"core-js": "^3.3.3",
		"cors": "^2.8.5",
		"deep-freeze": "~0.0.1",
		"express": "~4.17.1",
		"express-prom-bundle": "~6.3.0",
		"glider-js": "^1.7.3",
		"global": "~4.4.0",
		"helmet-csp": "~3.2.0",
		"history": "4.10.1",
		"http-proxy-middleware": "^1.0.5",
		"i18next": "^19.7.0",
		"memory-cache": "~0.2.0",
		"moment": "^2.29.0",
		"moment-locales-webpack-plugin": "^1.2.0",
		"query-string": "6.13.7",
		"react": "^16.13.1",
		"react-autosize-textarea": "~7.1.0",
		"react-cookie": "~4.0.0",
		"react-dom": "^16.9.0",
		"react-facebook-login": "~4.1.1",
		"react-google-login": "~5.1.21",
		"react-head": "~3.4.0",
		"react-modal": "~3.12.1",
		"react-redux": "~7.2.1",
		"react-router": "^5.2.0",
		"react-router-dom": "^5.2.0",
		"redux": "~4.0.1",
		"redux-thunk": "~2.3.0",
		"serve-favicon": "~2.5.0",
		"serve-static": "~1.14.1",
		"styled-components": "~5.2.0",
		"ua-parser-js": "~0.7.22",
		"universal-cookie": "~4.0.4",
		"universal-cookie-express": "~4.0.0",
		"url-search-params-polyfill": "8.1.0",
		"uuid": "^8.3.0",
		"winston": "~3.3.3"
	},
	"devDependencies": {
		"@babel/cli": "^7.11.6",
		"@babel/core": "^7.11.6",
		"@babel/plugin-proposal-class-properties": "~7.12.1",
		"@babel/plugin-proposal-optional-chaining": "^7.12.1",
		"@babel/preset-env": "~7.12.10",
		"@babel/preset-flow": "~7.12.1",
		"@babel/preset-react": "~7.12.10",
		"@babel/register": "~7.12.10",
		"@commitlint/cli": "~11.0.0",
		"@commitlint/config-conventional": "~11.0.0",
		"@loadable/babel-plugin": "~5.13.2",
		"@loadable/webpack-plugin": "~5.14.0",
		"@storybook/addon-a11y": "^6.0.28",
		"@storybook/addon-docs": "^6.0.28",
		"@storybook/addon-essentials": "^6.0.28",
		"@storybook/addon-jest": "^6.0.28",
		"@storybook/addon-links": "^6.0.28",
		"@storybook/addon-viewport": "^6.0.28",
		"@storybook/react": "^6.0.28",
		"@svgr/cli": "~5.5.0",
		"@testing-library/jest-dom": "^5.11.4",
		"@testing-library/react": "^11.0.4",
		"babel-eslint": "~10.1.0",
		"babel-jest": "~26.6.3",
		"babel-loader": "~8.2.2",
		"babel-plugin-convert-to-json": "^0.1.0",
		"babel-plugin-module-resolver": "~4.0.0",
		"babel-plugin-styled-components": "~1.12.0",
		"babel-plugin-transform-assets": "~1.0.2",
		"cypress": "5.6.0",
		"cypress-cucumber-preprocessor": "2.5.5",
		"cypress-html-validate": "^1.2.4",
		"cypress-wait-until": "^1.7.1",
		"enzyme": "~3.11.0",
		"enzyme-adapter-react-16": "~1.15.5",
		"eslint": "~7.15.0",
		"eslint-config-airbnb": "~18.2.0",
		"eslint-config-prettier": "~7.0.0",
		"eslint-import-resolver-babel-module": "~5.2.0",
		"eslint-plugin-flowtype": "~5.2.0",
		"eslint-plugin-import": "~2.22.1",
		"eslint-plugin-jest": "~24.1.3",
		"eslint-plugin-jsx-a11y": "~6.4.1",
		"eslint-plugin-prettier": "~3.2.0",
		"eslint-plugin-react": "~7.21.2",
		"eslint-plugin-react-hooks": "^4.1.2",
		"eslint-plugin-security": "~1.4.0",
		"file-loader": "~6.2.0",
		"flow-bin": "~0.140.0",
		"html-validate": "4.0.2",
		"html-webpack-inline-source-plugin": "~0.0.10",
		"html-webpack-plugin": "~3.2.0",
		"husky": "~4.3.0",
		"ignore-styles": "~5.0.1",
		"install": "~0.13.0",
		"jest": "~26.6.3",
		"jest-styled-components": "~7.0.3",
		"js-yaml": "^3.14.0",
		"jscpd": "^3.3.19",
		"jsdom": "~16.4.0",
		"json-server": "^0.16.1",
		"mockdate": "~3.0.2",
		"node-mocks-http": "~1.9.0",
		"pm2": "~4.5.0",
		"prettier": "~2.2.1",
		"prom-client": "^12.0.0",
		"react-hot-loader": "~4.13.0",
		"react-is": "16.13.1",
		"react-styleguidist": "~11.1.0",
		"react-test-renderer": "~16.13.1",
		"redux-mock-store": "~1.5.3",
		"regenerator-runtime": "^0.13.7",
		"snapshot-diff": "~0.8.1",
		"start-server-and-test": "~1.11.4",
		"terser-webpack-plugin": "~4.2.2",
		"trim-right": "^1.0.1",
		"typescript": "^4.0.3",
		"url-loader": "~4.1.0",
		"webpack": "~4.44.2",
		"webpack-cli": "~4.2.0",
		"webpack-dev-server": "~3.11.0",
		"webpack-manifest-plugin": "~2.2.0",
		"webpack-merge": "~5.6.1",
		"webpack-node-externals": "~2.5.2",
		"webpack-pwa-manifest": "~4.3.0",
		"yaml-jest": "^1.0.5",
		"yargs": "^16.0.3"
	},
	"scripts": {
		"build": "webpack --progress --color --config ./webpack/prod.config.js",
		"start:dev": "webpack serve --config ./webpack/dev.config.js --hot",
		"server:dev": "yarn server:dev:api-mock-start & env FRONT_URL=http://localhost:9009 API_URL=http://localhost:9000 yarn server:dev:start",
		"server:dev:start": "env PORT=9009 node bin/start",
		"server:dev:api-mock-start": "node ./apiMocks/server.js",
		"server:preprod": "env HTTPS=true NODE_ENV=development PORT=443 API_URL=https://local.makeorg.tech/api-local PROXY_TARGET_API_URL=https://api.preprod.makeorg.tech FRONT_URL=https://local.makeorg.tech node bin/start",
		"server": "env PORT=3000 HTTPS=true API_URL=https://api.preprod.makeorg.tech FRONT_URL=https://local.makeorg.tech:3000 pm2-runtime start ecosystem.config.js",
		"version:build": "node bin/versionBuild.js",
		"prepush": "yarn documentation:check && yarn i18n:translation:check && yarn lint && yarn flow && yarn test:unit:all && yarn jscpd",
		"lint": "eslint client server shared",
		"test:server:unit": "jest ./server/.*.spec.js",
		"test:server:unit:watch": "npm run test:server:unit -- --watch",
		"test:shared:unit": "jest ./shared/.*.spec.js",
		"test:shared:unit:watch": "npm run test:shared:unit -- --watch",
		"test:unit": "jest ./client/.*.spec.js",
		"test:unit:watch": "npm run test:unit -- --watch",
		"test:unit:all": "jest ./client/.*.spec.js ./server/.*.spec.js ./shared/.*.spec.js",
		"test:unit:all:watch": "npm run test:unit:all -- --watch",
		"test-with-coverage": "npm run test:unit:all -- --coverage",
		"flow": "flow",
		"test:cypress": "env NODE_ENV=test start-server-and-test server:dev http://localhost:9009 cypress:run",
		"cypress:run": "cypress run -b chrome --headless",
		"cypress:open": "cypress open",
		"lighthouse:run": "env NODE_ENV=test start-server-and-test server:dev http://localhost:9009 test:lighthouse:all",
		"test:lighthouse:all": "yarn test:lighthouse:sequence && yarn test:lighthouse:consultation && yarn test:lighthouse:proposal",
		"test:lighthouse:home": "lighthouse-ci http://localhost:9009 --accessibility=100 --report='.' --filename=report-home.html --chrome-flags='--headless --no-sandbox'",
		"test:lighthouse:sequence": "lighthouse-ci http://localhost:9009/FR/consultation/question-0-slug/selection --accessibility=100 --report='.' --filename=report-sequence.html --chrome-flags='--headless --no-sandbox'",
		"test:lighthouse:consultation": "lighthouse-ci http://localhost:9009/FR/consultation/question-0-slug/consultation --accessibility=100 --report='.' --filename=report-consultation.html --chrome-flags='--headless --no-sandbox'",
		"test:lighthouse:proposal": "lighthouse-ci http://localhost:9009/FR/consultation/question-0-slug/proposal/proposal-question-0-slug-0-id/proposal-question-0-slug-0-slug --accessibility=100 --report='.' --filename=report-proposal.html --chrome-flags='--headless --no-sandbox'",
		"svg": "svgr -d ./client/ui/Svg/elements ./client/ui/Svg/svgr --template ./client/ui/Svg/svgrTemplate.js && cp -r ./client/ui/Svg/svgr/* ./client/ui/Svg/source",
		"jscpd": "jscpd client server shared",
		"storybook": "start-storybook -p 6006",
		"build-storybook": "build-storybook",
		"i18n:translation": "npx babel --config-file ./babel.config.js i18n --out-dir dist/i18n i18n && bin/checkTranslation.js",
		"i18n:translation:check": "yarn i18n:translation check -d ./server/staticData/i18n -l 'fr'",
		"i18n:translation:fix": "yarn i18n:translation check -d ./server/staticData/i18n -l 'fr' --fix",
		"documentation:check": "bin/checkDocumentation.js check",
		"documentation:update": "bin/checkDocumentation.js check --fix"
	}
}
