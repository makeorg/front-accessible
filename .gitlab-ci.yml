image: makeorg/docker-arch-docker:latest

variables:
  IMAGE: "make-front"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ~/.cache
    - node_modules

stages:
  - check
  - e2e
  - build
lint:
  stage: check
  except: 
    - production
  image: node:12.19-alpine
  before_script:
    - export YARN_VERSION="1.22.5"
  script:
    - yarn install
    - yarn lint

flow-static:
  stage: check
  except: 
    - production
  image: node:12.19-alpine
  before_script:
    - export YARN_VERSION="1.22.5"
  script:
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-2.25-r0.apk && \
    - apk add glibc-2.25-r0.apk
    - yarn install
    - yarn flow

test:
  stage: check
  image: node:12.19-alpine
  before_script:
    - export YARN_VERSION="1.22.5"
  script:    
    - node -v
    - yarn install
    - yarn i18n:translation:check
    - yarn documentation:check
    - yarn test-with-coverage
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - coverage

jscpd:
  stage: check
  except: 
    - production
  image: node:12.19-alpine
  before_script:
    - export YARN_VERSION="1.22.5"
  script:
    - yarn install
    - yarn jscpd
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - reports
  
e2e-test:
  stage: e2e
  needs: []
  except: 
    - production
  image: cypress/base:12.18.3
  script:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - 
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list 
    - apt-get update && apt-get install -y dbus-x11 google-chrome-stable && rm -rf /var/lib/apt/lists/*
    - yarn install
    - yarn build
    - yarn cypress install
    - yarn test:cypress
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - cypress/screenshots
      - cypress/videos

lighthouse:
  stage: check
  except: 
    - production
  image: markhobson/node-chrome:latest
  script:
    - npm install -g n
    - n 12.19
    - npm i -g lighthouse@~6.1.0 lighthouse-ci@1.10.0 yarn
    - yarn install
    - yarn build
    - lighthouse --version && lighthouse-ci --version
    - yarn lighthouse:run
  artifacts:
    paths:
      - ./report-home.html
      - ./report-sequence.html
      - ./report-consultation.html
    expire_in: 1 week

build:
  stage: build
  tags:
    - docker
  before_script:
    - export IMAGE_VERSION=`git rev-parse --short=10 HEAD`
    - mkdir -p /var/lib/docker
    - mount -t tmpfs -o size=12G tmpfs /var/lib/docker
    - if [ ! -e /var/run/docker.sock ]; then DOCKER_DRIVER=overlay2 dockerd & fi
    - until docker ps; do echo "waiting for docker to be up..."; sleep 0.5; done
    - docker login "https://$NEXUS_URL" --username "$NEXUS_USER" --password "$NEXUS_PASSWORD"
    - echo $(docker pull $NEXUS_URL/$IMAGE:$IMAGE_VERSION)
  script:
    - >
      if [[ -z $(docker images -q $NEXUS_URL/$IMAGE:$IMAGE_VERSION) ]];then
        docker build --rm -t $NEXUS_URL/$IMAGE:$IMAGE_VERSION .
        docker push $NEXUS_URL/$IMAGE:$IMAGE_VERSION
      fi
    - docker tag $NEXUS_URL/$IMAGE:$IMAGE_VERSION $NEXUS_URL/$IMAGE:$CI_COMMIT_REF_NAME-latest
    - docker push $NEXUS_URL/$IMAGE:$CI_COMMIT_REF_NAME-latest
